{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sasou\\\\OneDrive\\\\Desktop\\\\bibliotheque-frontend\\\\src\\\\components\\\\BookList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './styles/BookList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookList = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch('http://localhost:5000/books').then(response => {\n      if (!response.ok) {\n        console.log('Erreur de réponse:', response);\n        throw new Error('Erreur lors de la récupération des données');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Données récupérées:', data);\n      setBooks(data);\n    }).catch(error => console.error('Erreur dans fetch:', error));\n  }, []);\n  const handleGoBack = () => {\n    navigate(-1); // Retourner à la page précédente\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: handleGoBack,\n      children: \"Retour\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Liste des livres disponibles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"book-list\",\n      children: books.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [book.title, \" - \", book.author, \" (\", book.category, \")\"]\n      }, book.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(BookList, \"MwDtCv3/1QDi+XMz646ujaLPGkg=\", false, function () {\n  return [useNavigate];\n});\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","BookList","_s","books","setBooks","navigate","fetch","then","response","ok","console","log","Error","json","data","catch","error","handleGoBack","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","book","title","author","category","id","_c","$RefreshReg$"],"sources":["C:/Users/sasou/OneDrive/Desktop/bibliotheque-frontend/src/components/BookList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './styles/BookList.css';\r\n\r\nconst BookList = () => {\r\n    const [books, setBooks] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/books')\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    console.log('Erreur de réponse:', response);\r\n                    throw new Error('Erreur lors de la récupération des données');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                console.log('Données récupérées:', data);\r\n                setBooks(data);\r\n            })\r\n            .catch(error => console.error('Erreur dans fetch:', error));\r\n    }, []);\r\n\r\n    const handleGoBack = () => {\r\n        navigate(-1); // Retourner à la page précédente\r\n    };\r\n\r\n    return (\r\n        <div className=\"book-list-container\">\r\n            <button className=\"back-button\" onClick={handleGoBack}>Retour</button>\r\n            <h2>Liste des livres disponibles</h2>\r\n            <ul className=\"book-list\">\r\n                {books.map(book => (\r\n                    <li key={book.id}>\r\n                        {book.title} - {book.author} ({book.category})\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZS,KAAK,CAAC,6BAA6B,CAAC,CAC/BC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,QAAQ,CAAC;QAC3C,MAAM,IAAII,KAAK,CAAC,4CAA4C,CAAC;MACjE;MACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDN,IAAI,CAACO,IAAI,IAAI;MACVJ,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEG,IAAI,CAAC;MACxCV,QAAQ,CAACU,IAAI,CAAC;IAClB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIN,OAAO,CAACM,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvBZ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,oBACIL,OAAA;IAAKkB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAChCnB,OAAA;MAAQkB,SAAS,EAAC,aAAa;MAACE,OAAO,EAAEH,YAAa;MAAAE,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtExB,OAAA;MAAAmB,QAAA,EAAI;IAA4B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCxB,OAAA;MAAIkB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACpBhB,KAAK,CAACsB,GAAG,CAACC,IAAI,iBACX1B,OAAA;QAAAmB,QAAA,GACKO,IAAI,CAACC,KAAK,EAAC,KAAG,EAACD,IAAI,CAACE,MAAM,EAAC,IAAE,EAACF,IAAI,CAACG,QAAQ,EAAC,GACjD;MAAA,GAFSH,IAAI,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACtB,EAAA,CArCID,QAAQ;EAAA,QAEOH,WAAW;AAAA;AAAAiC,EAAA,GAF1B9B,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}